digraph "UART"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=box];
  rankdir=LR;
  Node7 [label="UART Private Macros",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___private___macros.html",tooltip=" "];
  Node5 [label="UART Exported Macros",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___exported___macros.html",tooltip=" "];
  Node6 [label="UART Private Constants",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___private___constants.html",tooltip=" "];
  Node9 [label="UART_Exported_Functions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___exported___functions.html",tooltip=" "];
  Node2 [label="STM32F4xx_HAL_Driver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___s_t_m32_f4xx___h_a_l___driver.html",tooltip=" "];
  Node3 [label="UART Exported Types",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___exported___types.html",tooltip=" "];
  Node8 [label="UART Private Functions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___private___functions.html",tooltip=" "];
  Node1 [label="UART",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="HAL UART module driver."];
  Node4 [label="UART Exported Constants",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___u_a_r_t___exported___constants.html",tooltip=" "];
  Node2->Node1 [shape=plaintext, dir="back", style="solid"];
  Node1->Node3 [shape=plaintext, dir="back", style="solid"];
  Node1->Node4 [shape=plaintext, dir="back", style="solid"];
  Node1->Node5 [shape=plaintext, dir="back", style="solid"];
  Node1->Node6 [shape=plaintext, dir="back", style="solid"];
  Node1->Node7 [shape=plaintext, dir="back", style="solid"];
  Node1->Node8 [shape=plaintext, dir="back", style="solid"];
  Node1->Node9 [shape=plaintext, dir="back", style="solid"];
}
